package us.myles.sep;

import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.wrappers.nbt.NbtBase;
import com.comphenix.protocol.wrappers.nbt.NbtCompound;
import com.comphenix.protocol.wrappers.nbt.NbtFactory;
import com.comphenix.protocol.wrappers.nbt.NbtList;

import org.bukkit.Bukkit;
import org.bukkit.Chunk;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.block.BlockState;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.java.JavaPlugin;

import java.util.ArrayList;
import java.util.List;

public class SkullExploitPatch extends JavaPlugin implements Runnable {
    public void onEnable() {
        // Packet Listener
        ProtocolLibrary.getProtocolManager().addPacketListener(new SkullExploitListener(this));
        // Chunk Load Listener
        Bukkit.getPluginManager().registerEvents(new ChunkPatcher(this), this);
        // Item Listener
        Bukkit.getPluginManager().registerEvents(new ItemPatcher(this), this);
        // Register Scheduler
        Bukkit.getScheduler().runTaskTimerAsynchronously(this, this, 20, 20);
    }

    public boolean isExploit(ItemStack stack) {
        try {
            if (stack.getType() == Material.SKULL || stack.getType() == Material.SKULL_ITEM) {
                // Check human
                if (stack.getDurability() == 3) {
                    NbtCompound tag = (NbtCompound) NbtFactory.fromItemTag(stack);
                    if (isExploit(tag)) {
                        return true;
                    }
                }
            }
        } catch (Exception e) {
            //nbt read error
        }
        return false;
    }

    public boolean isExploit(NbtCompound root) {
        // Item
        if (root.containsKey("SkullOwner")) {
            NbtCompound skullOwner = root.getCompound("SkullOwner");
            if (skullOwner.containsKey("Properties")) {
                NbtCompound properties = skullOwner.getCompound("Properties");
                if (properties.containsKey("textures")) {
                    NbtList<NbtBase> textures = properties.getList("textures");
                    for (NbtBase texture : textures.asCollection()) {
                        if (texture instanceof NbtCompound) {
                            if (!((NbtCompound) texture).containsKey("Signature")) {
                                // Check for value
                                if (((NbtCompound) texture).containsKey("Value")) {
                                    // easy bypass. add to Value "==" and others symbols
                                    if (((NbtCompound) texture).getString("Value").trim().length() > 0) {
                                        return false;
                                    }
                                }
                                root.remove("SkullOwner");
                                return true;
                            }
                        }
                    }
                }
            }
        }
        // Block
        if (root.containsKey("Owner")) {
            NbtCompound skullOwner = root.getCompound("Owner");
            if (skullOwner.containsKey("Properties")) {
                NbtCompound properties = skullOwner.getCompound("Properties");
                if (properties.containsKey("textures")) {
                    NbtList<NbtBase> textures = properties.getList("textures");
                    for (NbtBase texture : textures.asCollection()) {
                        if (texture instanceof NbtCompound) {
                            if (!((NbtCompound) texture).containsKey("Signature")) {
                                if (((NbtCompound) texture).containsKey("Value")) {
                                    if (((NbtCompound) texture).getString("Value").trim().length() > 0) {
                                        return false;
                                    }
                                }
                                root.remove("Owner");
                                return true;
                            }
                        }
                    }
                }
            }
        }
        return false;
    }

    public void cleanChunk(Chunk chunk) {
        try {
            List<Block> heads = new ArrayList<>();

            for (BlockState state : chunk.getTileEntities()) {
                // Check for skull
                if (state.getType() == Material.SKULL || state.getType() == Material.SKULL_ITEM) {
                    // Check human
                    heads.add(state.getBlock());
                }
            }

            for (Block head : heads) {
                NbtCompound root = NbtFactory.readBlockState(head);
                if (isExploit(root)) {
                    getLogger().warning("Removing exploit block, " + head.getLocation());
                    head.setType(Material.AIR);
                }
            }
        } catch (Exception e) {
            // Failed to read chunk data, probably odd version and need to update protocol lib.
        }
    }

    @Override
    public void run() {
        for (Player p : Bukkit.getOnlinePlayers()) {
            for (ItemStack it : p.getInventory().getContents()) {
                if (it.getType() == Material.SKULL || it.getType() == Material.SKULL_ITEM) this.isExploit(it);
            }
        }
    }
}
