package us.myles.sep;

import org.bukkit.Material;
import org.bukkit.entity.EntityType;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.inventory.ItemStack;

public class ItemPatcher implements Listener {

    private final SkullExploitPatch plugin;

    public ItemPatcher(SkullExploitPatch skullExploitPatch) {
        this.plugin = skullExploitPatch;
    }

    @EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = false)
    public void onInteract(PlayerInteractEvent e) {
        if (plugin.isExploit(e.getItem())) {
            e.setCancelled(true);
            plugin.getLogger().warning("Removing exploit from inventory, " + e.getPlayer().getName());
        }
    }

    @EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = false)
    public void onJoin(PlayerJoinEvent e) {
        for(ItemStack item:e.getPlayer().getInventory().getContents()) {
            if (plugin.isExploit(item)) {
                plugin.getLogger().warning("Removing exploit from inventory, " + e.getPlayer().getName());
            }
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    public void onItemDrop(PlayerDropItemEvent e) {
        if (plugin.isExploit(e.getItemDrop().getItemStack())) {
            e.setCancelled(true);
            plugin.getLogger().warning("Removing exploit from inventory, " + e.getPlayer().getName());
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    public void onItemDrop(InventoryClickEvent e) {
        if (e.getWhoClicked().getType() == EntityType.PLAYER) {
            if (plugin.isExploit(e.getCurrentItem())) {
                e.setCancelled(true);
                plugin.getLogger().warning("Removing exploit from inventory, " + e.getWhoClicked().getName());
            }
        }
    }
}
